<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="tagBox" width="500" height="30" titletext="New Form">
    <Layouts>
      <Layout height="30" width="500"/>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[//include 'ustra::libs/web/component-dataset.xjs'


this.loaded = false;


	this.toObject =  function(dataset) {
	
		var result = { columns: [], rows: [] };
	
		if (dataset.colinfos) {
			for (var j=0; j<dataset.colinfos.length; j++) {
				var cellInfo = dataset.colinfos[j];
				result.columns.push({
					id: cellInfo.id,
					name: cellInfo.name,
					type: cellInfo.type,
					size: cellInfo.size
				});
			}
		}
		
		if (dataset._rawRecords) {
			var rowCount = dataset.getRowCount();
			for (var j=0; j<rowCount; j++) {
				var row = this.getRowData(dataset, j);
				
				result.rows.push(row);
			}
		}
		
		return result;
	}
	
	this.getRowData =  function(dataset, rowIndex, dateToString) {
		
		// 데이터가 존재하지 않을 경우, null로 리턴
		if (!dataset || dataset.getRowCount() <= rowIndex) {
			return null;
		}
		
		var data = {};
		var record = dataset._rawRecords[rowIndex];
		for (var i=0; i<dataset.colinfos.length; i++) {
			var id = dataset.colinfos[i].id;
			data[id] = dataset.getColumn(rowIndex, id);
			
			// patch date
			if (dateToString) {
				if (typeof data[id] === 'object' && !!data[id].date) {
					data[id] = data[id].date.toISOString();
				}
			}
			
// 			if (typeof record[i] != 'undefined') {
// 				data[id] = record[i];
// 			}
		}
		
		return data;
	}
	
	this.getEl =  function(component) {
		return document.getElementById(component._unique_id);
	}
	
this.draw = function() {
	var data = this.toObject(this.dsDataList);
	var el = this.getEl(this).querySelector('.nexainnercontainer');
	el = el.cloneNode(true);
	
	this.getEl(this).querySelector('.nexainnercontainer').replaceWith(el);
	
	var _self = this;
	
	el.innerHTML = '';
	 //el.style.display = 'flex';
	el.classList.add('tagBox');

	

		
	data.rows.forEach(function(row, index) {
		
		var container = document.createElement('div');
		container.classList.add('container');
		
		var textBox = document.createElement('span');
		textBox.innerText = row.text;
		
		var removeButton = document.createElement("a");
		removeButton.classList.add('remove-button');
		removeButton.innerText = 'x';		
		
		container.append(textBox);
		container.append(removeButton);
		container.style.position = 'relative';
		el.append(container);
		
		removeButton.value = row.value;
		removeButton.index = row.index;
		
// 		$(removeButton)
// 			.data('value', row.value)
// 			.data('index', index)
// 			.click(function() { _self.removeItem(index) });

	});
	
	// add drag event
	if (this.loaded) {
		return;
	}
	
// 	$(el).on('scroll', function(e){
// 		return true;
// 	});
// 	
// 	$(el).mousedown(function(e) {
// 		_self.dragStart = true;
// 		_self.dragStartPositionX = e.clientX;
// 	});
// 	
// 	$(el).mouseup(function() {
// 		_self.dragStart = false;
// 	});
// 	
// 	$(el).mousemove(function(e) {
// 		if (_self.dragStart) {
// 			var distance = -(e.clientX - _self.dragStartPositionX);
// 			$(el).scrollLeft(Math.max(0, $(el).scrollLeft() + distance));
// 		}
// 	});
	
	this.loaded = true;
	
}

this.removeItem = function(index) {
	this.dsDataList.deleteRow(index);
	this.draw();
};

this.reDraw = function() {
	this.loaded = false;
	this.draw();
};
]]></Script>
    <Objects>
      <Dataset id="dsDataList">
        <ColumnInfo>
          <Column id="value" type="STRING" size="256"/>
          <Column id="text" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
