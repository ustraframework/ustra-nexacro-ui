<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="login" width="1600" height="1200" cssclass="frm_LOGIN_Bg" onload="login_onload" onsize="login_onsize">
    <Layouts>
      <Layout width="1600" height="1200" screenid="Desktop_screen">
        <Div id="div_login" taborder="0" text="Div00" left="498" top="300" width="604" height="595">
          <Layouts>
            <Layout>
              <Static id="staAutoLogin" taborder="9" text="자동 로그인 처리 중입니다." left="-2" top="160" width="101.66%" height="300" cssclass="sta_LOGIN_Text02" letterSpacing="-1px" background="#222222" visible="false" textAlign="center"/>
              <Edit id="edId" taborder="0" left="0" top="197" width="604" height="48" cssclass="edi_LOGIN_ID" displaynulltext="아이디를 입력하세요" required="true" text="admin" onkeyup="div_login_edId_onkeyup"/>
              <Edit id="edPassword" taborder="1" left="0" top="253" width="604" height="48" cssclass="edi_LOGIN_PW" displaynulltext="비밀번호를 입력하세요" required="true" text="admin" password="true" onkeyup="div_login_edPassword_onkeyup"/>
              <Button id="Button00" taborder="2" text="로그인" left="0" top="325" width="604" height="48" cssclass="btn_LOGIN_LOGIN" onclick="div_login_btnLogin_onclick"/>
              <Button id="btnPrivacy" taborder="3" text="개인정보처리방침" top="403" width="130" height="30" right="0" cssclass="btn_LOGIN_Info" onclick="div_login_btnPrivacy_onclick"/>
              <CheckBox id="chkSaveLoginId" taborder="4" text="아이디저장" left="0" top="403" width="150" height="30" cssclass="chk_LOGIN_Save"/>
              <Static id="Static02" taborder="5" left="0" top="525" width="604" height="70" usedecorate="true" cssclass="sta_LOGIN_Text03" text="* 일부 브라우저에서 제공하는 자동 로그인 기능을 사용할 경우 개인정보가 유출될 수 있으니 주의바랍니다.&#13;&#10;* 관련 문의사항은 담당자 &lt;fc v=&quot;#da9529&quot;&gt;(02-3282-5079)&lt;/fc&gt;으로 연락주세요."/>
              <Static id="Static00" taborder="6" text="Welcome!" left="0" top="-5" width="604" height="95" cssclass="sta_LOGIN_Text01"/>
              <Static id="Static01" taborder="7" text="관리자 페이지에 오신 것을 환영합니다." left="0" top="104" width="604" height="35" cssclass="sta_LOGIN_Text02" letterSpacing="-1px"/>
              <Button id="btnShowPassword" taborder="8" left="564" top="253" width="40" height="48" cssclass="btn_LOGIN_PWHide" text="" onclick="div_login_btnShowPassword_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="Static00" taborder="1" left="0" top="0" height="65" width="235" cssclass="sta_LOGIN_HD"/>
        <Button id="Button02" taborder="2" left="1130" top="553" width="40" height="48" cssclass="btn_LOGIN_PWShow" visible="false"/>
        <Static id="Static01" taborder="3" text="↓ 비밀번호 숨김, 보이게 버튼 추가&#13;&#10;      해당 내용 확인 후 현 디스크립션은 삭제" left="1120" top="496" width="250" height="52" color="#ffffff" visible="false"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[include 'ustra::libs/web/app.xjs';
include 'ustra::libs/web/bo/auth.xjs';
include 'ustra::libs/web/validation.xjs';
include 'ustra::libs/web/popup.xjs';
include 'ustra::libs/web/utils/route.xjs';
include 'ustra::libs/web/utils/date.xjs';
include 'shopAdmin::auth.xjs';

var LOGIN_ID_STORAGE_KEY = '__loggedId'

this.login_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	$ustra.bo.auth.unAuthenticate();
	this.fn_div_login_onsize();	
	this.validator = $ustra.validation.registerComponents(this.div_login);
	
	this.checkAutoLogin();
	
	
	var savedId = window.localStorage.getItem(LOGIN_ID_STORAGE_KEY);	
	if (savedId) {
		this.div_login.form.edId.set_value(savedId);
		this.div_login.form.chkSaveLoginId.set_value(true);
	}
	
	this.div_login.form.edId.setFocus();
	this.div_login.form.edId.setCaretPos( -1 );
	//this.div_login.form.edPassword.setFocus();
	
};

// 상담 직원 자동 로그인
this.checkAutoLogin = function() {

	if (nexacro.getApplication()._loginExecuted) {
		return;
	}

	var token = $ustra.utils.route.queryParam('token');
	if (token) {
		this.div_login.form.staAutoLogin.set_visible(true);
		this.div_login.form.staAutoLogin.bringToFront();
		this.login(token);
	}
}

this.login_onsize = function(obj:nexacro.Form,e:nexacro.SizeEventInfo)
{
	this.fn_div_login_onsize();
};

this.fn_div_login_onsize = function()
{
  	var nLeft = (nexacro.getApplication().mainframe.width / 2) - Math.round((this.div_login.getOffsetWidth()) / 2);
  	var nTop = (nexacro.getApplication().mainframe.height / 2) - Math.round((this.div_login.getOffsetHeight()) / 2);

	if(nLeft <= 0)
	{
		this.div_login.setOffsetLeft(0);
	}
	else
	{
    	this.div_login.setOffsetLeft(nLeft);
		this.div_login.setOffsetTop(nTop);
	}
}

this.goNextPageUrl = function(res) {
	var formname = $ustra.utils.route.queryParam('formname');
	var url = formname ? formname : this.$ustraConfig.mainPageUrl;
	
	var message = res.body.userName + '님, 환영합니다.';
	
	if (res.body.lastLoginInfo) {
		message += '\n최종 접속 일시 : ' + $ustra.utils.date.formatDateTime(res.body.lastLoginInfo.LOGINDTTM);
		message += '\n최종 접속 아이피 : ' + res.body.lastLoginInfo.ACCIP;
	}
	
	alert(message, '로그인 성공', 'auth', function() {
		$shopAdmin.auth.applyMaskingPolicy();
		this.go(url);
	}.bind(this));
	
}

this.div_login_btnLogin_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.login();
};

this.login = function(token) {
	// nexacro.Application.mainframe.VFrameSet.set_separatesize("0,*");
	nexacro.getApplication()._loginExecuted = true;
	var _self = this;
	
	var id = null;
	var pwd = null;
	if (!token) {
		if (!this.validator.validateAll().validationResult) {
			return;
		}
		
		id = this.div_login.form.edId.value;
		pwd = this.div_login.form.edPassword.value;
		
		this.div_login.form.edPassword.set_value('');
	}
	
	var idPwdLogin = function(id, pwd) {
		return $ustra.bo.auth.authenticate(id, pwd, function(result) {
			var additionalInfo = {};
			
			additionalInfo.internalUser = result.internalUser;
			additionalInfo.completed = additionalInfo.internalUser;
			additionalInfo.completed = true;
			additionalInfo.csUser = result.csUser;
			additionalInfo.deptCd = result.deptCd;
			additionalInfo.deptNm = result.deptNm;
			
			return additionalInfo;			
		})
	}
	
	var tokenLogin = function(token) {
		return $ustra.axios.api('/api/authentication/cs-login?token=' + token, {
			method: 'GET'
		}).then(function(res) {
			var loginResult = res.data || {};
			loginResult.body = loginResult.body || {};
			loginResult.body.actionResponse = {};
		
			if (loginResult.resultCode !== '0000') {
				loginResult.body.actionResponse = {
					action: 'SHOW_DIALOG',
					message: '자동 로그인을 실패하였습니다. 관리자에게 문의하시기 바랍니다.',
				};
				return loginResult;
			}
			
			var passwordChangeDays = $ustra.app.prop().passwordChangeDays;
			var maximumLoginFailNumbers = $ustra.app.prop().maximumLoginFailNumbers;
			
			// 성공
			if (loginResult.body.resCd === '0000') {
			  
			  $ustra.bo.auth.storeAuthentication(loginResult.body, function(result) {
					var additionalInfo = {};
					additionalInfo.internalUser = result.internalUser;
					additionalInfo.completed = additionalInfo.internalUser;
					additionalInfo.csUser = result.csUser;
					additionalInfo.deptCd = result.deptCd;
					additionalInfo.deptNm = result.deptNm;
					
					return additionalInfo;			
				});
			  loginResult.body.actionResponse.action = 'SUCCESS';
			  return loginResult;
			}
			
			loginResult.body.actionResponse = {
			  action: 'SHOW_DIALOG',
			  message: '자동 로그인을 실패하였습니다. 관리자에게 문의하시기 바랍니다.'
			}

			return loginResult;
		})
	}
	
 	
	$ustra.bo.auth.unAuthenticate().then(function() {
		(token ? tokenLogin(token) : idPwdLogin(id, pwd)).then(function(res) {
			
			// 성공 케이스
			if (res.body.actionResponse.action === 'SUCCESS') {
			
				// 협력사
				if (!res.body.completed) {
					// 모바일 인증 처리
					$ustra.popup.open(this, 'commons::popup/authMobile.xfdl', '추가 인증!', {
						height: 350,
						closedCallback: function(result) {
							if (result) {
								_self.goNextPageUrl(res);
								return;
							}
						}.bind(this)
					});
					return;
				}
			
				this.onLoginSuccess(id, res.body);
				_self.goNextPageUrl(res);
				return;
			}
			
			// custom error 처리
			if (res.body.resCd === '4001') {
				$ustra.ui.alert('시스템을 이용할 수 있는 권한이 없습니다.', '권한이 없습니다.', 'auth');
				return;
			}
			
			if (res.body.resCd === '4002' || res.body.resCd === '4004') {
				
				var msg = res.body.resCd === '4002' ? 
					'시스템을 이용할 수 있는 권한이 없습니다. 권한 신청 후, 이용 가능합니다.' :
					'소속 부서가 변경되어 기존 권한이 제거되었습니다. 권한 신청 후 이용하시기 바랍니다.';
			
				$ustra.ui.alert(msg, '권한 신청이 필요합니다.', 'auth', 
					function() {
							
						// 권한 신청 처리
						$ustra.popup.open(this, 'commons::popup/requestAuth.xfdl', '권한 신청', {
							parameter: {
								userKey: res.body.userKey,
								userName: res.body.userName
							}
						});
					
				}.bind(this));				
				return;
			}
			
			if (res.body.resCd === '4003') {
				$ustra.ui.alert('권한 신청이 진행 중 입니다. 처리가 완료되면 이용 가능합니다.', '권한 신청 진행 중 입니다.', 'auth');
				return;
			}
			
			// 비밀번호 변경 권장
			if (res.body.actionResponse.action === 'SUCCESS_RECOMMEND_CHANGE_PASSWORD') {
				$ustra.ui.confirm(res.body.actionResponse.message, function(result) {
					// 비밀번호 변경 처리
					if (result) {
					} else {
						this.onLoginSuccess(id, res.body);
						this.onLoginSuccess(this.div_login.form.edId.value);
						this.goNextPageUrl(res);
					}
				}.bind(this));
				return;
			}
			
			// 비밀번호 변경 필수
			if (res.body.actionResponse.action === 'REQUIRE_CHANGE_PASSWORD') {
				$ustra.ui.alert(res.body.actionResponse.message, function(result) {
					
					$ustra.popup.open(this, 'ustra::forms/system/common/changePassword.xfdl', '비밀번호 변경', {
						parameter: {
							userKey: res.body.userKey,
							userName: res.body.userName,
							height: 400
						},
						closedCallback: function(result) {
							if (result) {
								alert('비밀번호 변경이 완료되었습니다. \n 변경된 비밀번호로 다시 로그인하시기 바랍니다.', '변경 완료', 'auth');
							}
						}
					});
					
					
				}.bind(this));
				return;
			}
			
			// 대화 창 표시
			if (res.body.actionResponse.action === 'SHOW_DIALOG') {
				$ustra.ui.alert(res.body.actionResponse.message, '인증 실패', 'auth', function() {
					if (token) {
						window.close();
					}
				});
				
				
				
				return;
			}
				
			}.bind(this)
		).catch(function(err) {
			console.error(err);
			alert('아이디 또는 비밀번호가 일치하지 않습니다.', function() {
				if (token) {
					window.close();
				}
			});
		});
	}.bind(this));
}


// 로그인 성공 시
this.onLoginSuccess = function(id, res) { 
	if (this.div_login.form.chkSaveLoginId.value) {
		window.localStorage.setItem(LOGIN_ID_STORAGE_KEY, id);
	} else {
		window.localStorage.removeItem(LOGIN_ID_STORAGE_KEY);
	}
	
	$ustra.auth.startCheckAuth();
}

this.div_login_btnShowPassword_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var isPassword = this.div_login.form.edPassword.password;
	this.div_login.form.edPassword.set_password(!isPassword);
	
	this.div_login.form.btnShowPassword.set_cssclass(!isPassword ? 'btn_LOGIN_PWHide': 'btn_LOGIN_PWShow');
};

this.div_login_edId_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if (e.keycode === 13) {
		this.div_login.form.edPassword.setFocus();
	}
};

this.div_login_edPassword_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if (e.keycode === 13) {
		this.login();
	}
};

this.div_login_chkSaveLoginId_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
console.log(e.postvalue);
// 	if (e.postvalue) {
// 		this.div_login.form.chkSaveLoginId.set_cssclass();
// 	} else {
// 		this.div_login.form.chkSaveLoginId.set_cssclass('chk_LOGIN_Save');
// 	}
};

this.div_login_btnPrivacy_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 개인정보처리방침
	window.open('http://notice.ezwel.com/privacy_admin_20190226.html', 'privacy_admin');
};
]]></Script>
  </Form>
</FDL>
