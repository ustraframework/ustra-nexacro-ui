<?xml version="1.0" encoding="utf-8"?>
<Script version="1.0" type="xscript5.1"><![CDATA[include 'ustra::libs/web/core.xjs';
include 'ustra::libs/web/global.xjs';
include 'ustra::libs/web/events.xjs';


var BO_INITIALIZED_EVENT_NAME = 'bo-initial-data-loaded';
var BO_INITIAL_DATA_ITEM_NAME = 'boInitialData';

$ustra.module('bo', {
	
	/**
	/* 초기화 완료 여부
	*/
	_initialized: false,
	
	/**
	/* 백오피스 초기 데이터 로딩
	/* 
	**/
	_initialize: function() {
		
		var storageInitialData = window.sessionStorage.getItem(BO_INITIAL_DATA_ITEM_NAME);
		
		if (storageInitialData) {
			$ustra.global.setItem(BO_INITIAL_DATA_ITEM_NAME, JSON.parse(storageInitialData));
			$ustra.events.fireEvent(BO_INITIALIZED_EVENT_NAME);
			return;
		}
		
		axios.post('/api/system/initializing-data')
			.then(function(res) {
				if (res.data) {
					window.sessionStorage.setItem(BO_INITIAL_DATA_ITEM_NAME, JSON.stringify(res.data.body));
					$ustra.global.setItem(BO_INITIAL_DATA_ITEM_NAME, res.data.body);
					$ustra.events.fireEvent(BO_INITIALIZED_EVENT_NAME);
				}
			})
			.catch(function(err) {
				console.error('초기 데이터 조회 중 오류가 발생하였습니다.', err)
			});
	},
	
	/**
	/* 초기 데이터를 조회한다.
	**/
	getInitialData: function() {
		return $ustra.global.getItem(BO_INITIAL_DATA_ITEM_NAME);
	},
	
	/**
	/* 초기 데이터 로드 후, 처리할 action 등록
	/* @param action 로드 후 실행할 function (function)
	**/
	afterInitialized : function(action) {
		$ustra.events.addEventHandler(BO_INITIALIZED_EVENT_NAME, action);
	},
	
	/**
	/* 공통 코드 관련 기능
	**/
	commonCode: {
		_columns: [
			['grpCd', 'string'],
			['dtlCd', 'string'],
			['cdNm', 'string'],
			['useYn', 'string'],
			['srtNo', 'int'],
		],
		/**
		/* 공통 코드용 데이터 셋을 생성한다.
		/* @param groupCode 그룹 코드 (optional) 
		/*
		/* @return 데이터 셋 (nexacro.DataSet)
		**/
		createDataSet: function(groupCode) {
			var dataset = new nexacro.Dataset;
			$ustra.bo.commonCode._columns.forEach(function(column) {
				dataset.addColumn(column[0], column[1]);
			});
			
			if (groupCode) {
				
				var codes = $ustra.bo.getInitialData().commonCodes;
				codes.forEach(function(code) {
					
					if (groupCode !== code.grpCd) {
						return;
					}
					
					dataset.addRow();
					$ustra.bo.commonCode._columns.forEach(function(column) {
						dataset.setColumn(dataset.rowposition, column[0], code[column[0]]);
					});
				});
				
			}
			
			return dataset;
		}
	}
});

$ustra.events.addApplicationGlobalEventName(BO_INITIALIZED_EVENT_NAME);]]></Script>
