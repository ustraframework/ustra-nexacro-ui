<?xml version="1.0" encoding="utf-8"?>
<Script version="1.0" type="xscript5.1"><![CDATA[include 'ustra::libs/web/core.xjs'

$ustra.module('component', { 
	
	/**
	/* 대상 컴포넌트의 폼을 조회한다.
	/* @param component 대상 컴포넌트
	/* 
	/* @return nexacro.Form 객체
	**/
	getForm: function(component) {
		return component._getParentForm();
	},
	
	/**
	/* 대상 컴포넌트의 유형 명을 조회한다.
	/* @param component 대상 컴포넌트
	/* 
	/* @return 유형 명 (string)
	**/
	getType: function(component) {
		return component._type_name;
	},
	
	/**
	/* 대상 컴포넌트가 container 인지 확인
	/* @param component 대상 컴포넌트
	/* 
	/* @return 컨테이너 여부(boolean)
	**/
	isContainer: function(component) {
		return component._is_container;
	},
	
	/**
	/* 하위 컴포넌트 목록을 조회한다.
	/* @param component 대상 컴포넌트
	/* @param addSelf components 대상 포함여부 (default. false)
	/* 
	/* @return 컴포넌트 목록 (array)
	**/
	getChildComponents : function(components, addSelf) {
	
		components = nexacro._isArray(components) ? components : [components];
		
		var searchComponents = function(component) {
			var searchedComponents = [];
			
			if (!$ustra.component.isContainer(component)) {
				return [];
			}
			
			var formComponents = component.form.components;
			for(var i=0; i<formComponents.length; i++) {
				
				var comp = formComponents[i];
				
				if (comp.parent.id === component.id || comp.parent.parent.id === component.id) {
					searchedComponents.push(comp);
				}
				
				var childrenComp = searchComponents(comp);
				childrenComp.forEach(function(cc) { searchedComponents.push(cc) });
				
			}
			
			return searchedComponents;
		}
		
		var searchedComponents = [];
		components.forEach(function(c) {
			searchComponents(c).forEach(function(cr){
				searchedComponents.push(cr);
			});
		});
		
		return searchedComponents;
	
	}
	
});]]></Script>
