<?xml version="1.0" encoding="utf-8"?>
<Script version="1.0" type="xscript5.1"><![CDATA[include 'ustra::libs/web/core.xjs';
include 'ustra::libs/web/events.xjs';
include 'ustra::libs/web/ui.xjs';
include 'ustra::libs/web/component.xjs';
include 'ustra::libs/web/component-combo.xjs';
include 'ustra::libs/web/component-dataset.xjs';
include 'ustra::libs/web/component-grid.xjs';
include 'ustra::libs/web/component/button.xjs';
include 'ustra::libs/web/component-listview.xjs'

// 폼 사전 로드 이벤트 명
var BEFORE_FORM_LOADED_EVENT_NAME = 'before-form-loaded';

$ustra.module('form', {
	
	defaults: {
		componentInitProps: {
// 			Static: {
// 				cssclass: 'sta_WF_LabelBg',
// 				label_cssclass: 'sta_WF_Label01',
// 				label_required_suffix: ' <fc v="#ff2c55">*</fc>'
// 			},
// 			Button: {
// 				cssclass: 'sta_WF_LabelBg',
// 				label_cssclass: 'sta_WF_Label01',
// 				label_required_suffix: ' <fc v="#ff2c55">*</fc>'
// 			}
		}
	},
	
	
	/**
	/* 컴포넌트 옵션을 조작한다.
	/*
	/* @param url 스크립트 url
	/* @param callback 로드 callback
	**/
	_adjustComponent: function(form, url) {
		
		if (!form.all) {
			return;
		}
	
		for(var i=0; i < form.all.length; i++) {
			var comp = form.all[i];
			if ($ustra.component.getType(comp) === 'Grid') {
				$ustra.component.grid._init(comp);
			}
			
			else if ($ustra.component.getType(comp) === 'Combo') {
				$ustra.component.combo._init(comp);
			}
			
			else if ($ustra.component.getType(comp) === 'DataSet') {
				$ustra.component.dataset._init(comp);
			}
			
			else if ($ustra.component.getType(comp) === 'Button') {
				$ustra.component.button._init(comp);
			}
			
			else if ($ustra.component.getType(comp) === 'ListView') {
				$ustra.component.listview._init(comp);
			}
			
			// center option 처리
			var centerRow = comp.centerRow === 'true';
			var centerCol = comp.centerCol === 'true';
			
			if (centerRow || centerCol) {
				$ustra.component.toCenter(comp, comp.parent, centerCol, centerRow, true);
			}
		}
	},
	
	
	_setComponentInitProps: function(form) {
	
		if (!form.components) {
			return;
		}
	
		var componentInitProps = $ustra.core.merge({}, $ustra.form.defaults.componentInitProps, $ustra.app._config.componentInitProps);
		
		var componentsLength = form.components.length;
		for(var i=0; i<componentsLength; i++) {
			var component = form.components[i];
			var type = $ustra.component.getType(component);
			
			if (componentInitProps[type] && typeof componentInitProps[type] === 'object') {
				for(var key in componentInitProps[type]) {
					var propValue = componentInitProps[type][key];
					var setFunction = component['set_' + key];
					
					if (!component[key] || component[key] === 'none') {
						
						if (setFunction && typeof setFunction === 'function') {
							setFunction.call(component, propValue);
							component[key] = propValue;
						} else {
							component[key] = propValue;
						}
						
					}
					
				}
			}
		}
		
		
	},
	
	/**
	/* 폼의 메뉴 정보를 조회한다.
	/*
	/* @param form 실행 form 객체 (nexacro.Form)
	/* @return 폼의 메뉴 정보 (없을 경우 null)
	**/
	getMenu: function(form) {
		var formUrl = $ustra.form.getUrl(form);
		
		if (!formUrl) {
			return null;
		}
		
		// 메뉴 정보 조회
		var systemCode = $ustra.app.getInitialData().currentSystemCode;
		
		return $ustra.app.menus(systemCode)
				.find(function(menu) {
					
					if (!menu.mnuUrl) {
						return false;
					}
					
					var menuUrl = menu.mnuUrl;
					
					if (menuUrl.indexOf('?') > 0) {
						menuUrl = menuUrl.substring(0, menuUrl.indexOf('?'));
					}
					
					return menuUrl.toLowerCase() === formUrl.toLowerCase();
				});
				
	},
	
	/**
	/* 폼의 URL 정보를 조회한다.
	/*
	/* @param form 실행 form 객체 (nexacro.Form)
	/* @return form url (string)
	**/
	getUrl: function(form) {
		return form._orgurl ? form._orgurl : form.parent ? form.parent.formurl || form.parent.url : null;
	}
});


// form event 조작
if (!nexacro.Form.prototype.__adjustedPrototype) {
	nexacro.Form.prototype.__adjustedPrototype = true;
// 	var originCreatedFn = nexacro.Form.prototype.on_created;
// 	nexacro.Form.prototype.on_created = function(_window) {
// 		var form = this;
// 		originCreatedFn.call(form, _window);
// 	}
	
	var originCreatedFn = nexacro.Form.prototype.on_init;
	nexacro.Form.prototype.on_init = function(_window) {
		var form = this;
		$ustra.ui.loadingBar.show();
		originCreatedFn.call(form, _window);
	}
	
	// console.log('nexacro.Form.prototype', nexacro.Form.prototype);
	
	var originFireOnloadFn = nexacro.Form.prototype.on_fire_onload;
	nexacro.Form.prototype.on_fire_onload = function(obj, url) {
		
		$ustra.ui.loadingBar.hide();
		$ustra.ui.loadingBar.show();
		
		var _self = this;
		var formUrl = $ustra.form.getUrl(obj);
		
		if (formUrl === $ustra.app._config.errorPageUrl) {
			$ustra.ui.loadingBar.hide();
			$ustra.form._setComponentInitProps(obj);
			$ustra.form._adjustComponent(obj, url);			
			return originFireOnloadFn.call(_self, obj, url);
		}
		
		
		$ustra.app.afterInitialized(function() {
			
			try {
				_self.$ustraConfig = $ustra.core.merge({}, $ustra.app._config);
				$ustra.form._setComponentInitProps(obj);
				$ustra.form._adjustComponent(obj, url);
				
				
				// 폼 로드 사전 이벤트
				var beforeResult = $ustra.events.fireEvent(BEFORE_FORM_LOADED_EVENT_NAME, obj);
				if (beforeResult === false) {
					return;
				}
				
				var result = originFireOnloadFn.call(_self, obj, url);
				return result;
			} finally {
				$ustra.ui.loadingBar.hide();
			}
		});
		
		return true;
	};
	
	
}]]></Script>
