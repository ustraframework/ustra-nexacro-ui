<?xml version="1.0" encoding="utf-8"?>
<Script version="1.0" type="xscript5.1"><![CDATA[include 'ustra::libs/web/core.xjs';

$ustra.module('ui', {
	
	defaults: {
		// alert form path
		alertFormPath: 'ustra::forms/common/dialog/alert.xfdl',
		
		// confirm form path
		confirmFormPath: 'ustra::forms/common/dialog/confirm.xfdl',
		
		// 기본 window function replace 여부
		replaceDialogFunction: true
	},
	
	_init: function() {
		__self.loadingBar._load();
		
		$ustra.app.getConfig(function(config) {
			if (__self._config().replaceDialogFunction) {
				window.alert = __self.alert;
				window.confirm = __self.confirm;
			}
		});
	},
	
	// merge된 option 조회
	_config: function() {
		if (__self._cachedConfig) {
			return __self._cachedConfig;
		}

		__self._cachedConfig = $ustra.core.merge({}, __self.defaults, $ustra.app._config.ui || {})
		return __self._cachedConfig;
	},
	
	alert: function(msg, callback) {
		var config = __self._config();
		__self._openDialog('ustra_dialog_alert_form', config.alertFormPath, msg, callback);
	},
	
	confirm: function(msg, callback) {
		var config = __self._config();
		__self._openDialog('ustra_dialog_confirm_form', config.confirmFormPath, msg, callback);		
	},
	
	_openDialog: function(dialogName, formPath, msg, callback) {
		var config = __self._config();
		var form = nexacro.getApplication().getActiveForm();
		if (!form) {
			return;
		}
		
		var dialogContainer;
		
		var width = 258;
		var height = 258;
		var left = (nexacro.getApplication().mainframe.width / 2) - Math.round(width / 2);
		var top = (nexacro.getApplication().mainframe.height / 2) - Math.round(height / 2);
			
		if (form.all[dialogName]) {
			dialogContainer = form.all[dialogName];
			dialogContainer.setOffsetLeft(left);
			dialogContainer.setOffsetTop(left);
			
			dialogContainer.set_visible(true);
		} else {
			dialogContainer = new Div();
			dialogContainer.init(dialogName, left, top, width, height, null, null, width, height);
			dialogContainer.set_url(formPath);
			dialogContainer.set_async(false);
			dialogContainer.set_formscrollbartype('none');
			
			form.addChild(dialogName, dialogContainer);
		}
		
		dialogContainer.bringToFront();
		dialogContainer.show();
		
		if (dialogContainer.form && dialogContainer.form.setMessage) {
			dialogContainer.form.setMessage(msg);
		}
		
		dialogContainer.closedCallback = function(result) {
			dialogContainer.set_visible(false);
			if (callback) {
				callback(result);
			}
		};
	},
	
	loadingBar: {
		_id: 'ustra-global-loading-indicator',
		_el: null,
		_couter: 0,
		// loading bar load
		_load: function() {
			
			if (document.getElementById($ustra.ui.loadingBar._id)) {
				return
			}
		
			var loadingIndicatorEl = document.createElement('div');
			loadingIndicatorEl.classList.add('ustra-loading');
			loadingIndicatorEl.id = $ustra.ui.loadingBar._id;
			loadingIndicatorEl.style.display = 'none';
			
			var spinnerEl = document.createElement('div');
			spinnerEl.classList.add('spinner');
			loadingIndicatorEl.append(spinnerEl);
			
			document.body.append(loadingIndicatorEl);
			
			$ustra.ui.loadingBar._el = loadingIndicatorEl;
			
			$ustra.app.afterInitialized(function() {
				$ustra.ui.loadingBar.hide();
			});
			
			$ustra.ui.loadingBar.show();
			
		},
		
		/**
		/* 로딩바 show
		**/
		show: function() {
			
			$ustra.ui.loadingBar._couter++;
			
			if ($ustra.ui.loadingBar._el) {
				$ustra.ui.loadingBar._el.style.display = 'flex';
			}
			
		},
		
		/**
		/* 로딩바 hide
		**/
		hide: function() {
		
			if ($ustra.ui.loadingBar._counter > 0) {
				--$ustra.ui.loadingBar._couter;
			}
			
			if ($ustra.ui.loadingBar._couter === 0) {
			}
			
			if ($ustra.ui.loadingBar._el) {
				$ustra.ui.loadingBar._el.style.display = 'none';
			}
		}
	}
	
});

__self = $ustra.ui;


]]></Script>
