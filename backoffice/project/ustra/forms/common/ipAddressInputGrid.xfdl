<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="ipAddressInputGrid" width="500" height="191" titletext="New Form" onload="ipAddressInputGrid_onload">
    <Layouts>
      <Layout height="191" width="500">
        <Button id="btnAdd" taborder="0" top="5" width="28" height="28" right="0" onclick="btnAdd_onclick" cssclass="btn_WF_TypeAdd"/>
        <Button id="btnRemove" taborder="1" top="5" height="28" right="27" width="28" onclick="btnRemove_onclick" cssclass="btn_WF_TypeDelete"/>
        <Grid id="grdIpAddress" taborder="2" left="2" top="40" right="2" visible="true" bottom="0" binddataset="dsIpAddress">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="59"/>
                <Column size="301"/>
              </Columns>
              <Rows>
                <Row size="38"/>
              </Rows>
              <Band id="body">
                <Cell text="bind:chk" edittype="checkbox" displaytype="checkboxcontrol"/>
                <Cell col="1" edittype="text" displaytype="editcontrol" text="bind:ipAddress" maskeditformat="###.###.###.###" maskedittype="string"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static00" taborder="3" text="IP Address" left="0" top="5" width="120" height="30" cssclass="sta_WF_WorkTitle"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[include 'ustra::libs/web/component-dataset.xjs'

this.ipAddressInputGrid_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{

	var regex = /^(([*])|(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))\.(([*])|(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))\.(([*])|(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))\.(([*])|(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$/
	
	this.parent.set_value = this.setValues.bind(this);
	this.parent.get_value = this.getValues.bind(this);
	this.parent.validate = function() {
		
		var value = $ustra.component.dataset.toObject(this.dsIpAddress).rows;
		for(i=0; i<value.length; i++) {
			if (!value[i].ipAddress) {
				alert('IP주소를 입력해주세요', '', 'error', function() {
					this.grdIpAddress.setFocus();
					this.grdIpAddress.selectRow(i, true);
					this.grdIpAddress.setCellPos(1);
					this.grdIpAddress.showEditor(true);
				}.bind(this));
				return false;
			}
			
			if (!regex.test(value[i].ipAddress)) {
				alert('유효하지 않은 IP 주소입니다.', '', 'error', function() {
					this.grdIpAddress.setFocus();
					this.grdIpAddress.selectRow(i, true);
					this.grdIpAddress.setCellPos(1);
					this.grdIpAddress.showEditor(true);
				}.bind(this));
				return false;
			}
			
		}
		return true;
		
	}.bind(this);
};

this.btnAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	

	this.dsIpAddress.addRow();
	this.grdIpAddress.setFocus();
	this.grdIpAddress.setCellPos(1);
	this.grdIpAddress.showEditor(true);

};

this.btnRemove_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var data = $ustra.component.dataset.toObject(this.dsIpAddress);
	var rowIndexes = [];
	data.rows.forEach(function(row, index) { 
		row.chk && rowIndexes.push(index) 
	});
	
	if (!rowIndexes.length) {
		alert('삭제할 항목을 선택하십시오.');
	}
	
	this.dsIpAddress.deleteMultiRows(rowIndexes);
};

this.setValues = function(addresses) {
	this.dsIpAddress.clearData();
	if (!addresses || addresses.length < 1) {
		return;
	}
	$ustra.component.dataset.bindData(
		this.dsIpAddress,
		addresses.map(function(addr) {
		return {
			ipAddress: addr
		};
	}));
}

this.getValues = function() {
	var data = $ustra.component.dataset.toObject(this.dsIpAddress);
	return data.rows.map(function(row) {
		return row.ipAddress;
	});
}

]]></Script>
    <Objects>
      <Dataset id="dsIpAddress">
        <ColumnInfo>
          <Column id="ipAddress" type="STRING" size="256"/>
          <Column id="chk" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
