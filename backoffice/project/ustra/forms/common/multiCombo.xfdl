<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="multiCombo" width="200" height="28" titletext="New Form" background="#e2e2e2" onload="multiCombo_onload">
    <Layouts>
      <Layout height="28" width="200">
        <PopupDiv id="pdiv_input" text="PopupDiv00" top="29" style="border:1 solid #808080ff ;" oncloseup="pdiv_input_oncloseup" border="1px solid #0a9882" formscrolltype="vertical" height="250" left="0" cssclass="pdiv_WF_MultiCombo" right="0" onpopup="pdiv_input_onpopup">
          <Layouts>
            <Layout/>
          </Layouts>
        </PopupDiv>
        <Div id="Div01" taborder="0" text="Div01" left="0" top="0" formscrolltype="none" right="0" bottom="0">
          <Layouts>
            <Layout>
              <Edit id="edt_output1" taborder="1" autoselect="true" autoskip="true" left="0" top="0" password="false" readonly="true" cssclass="edi_WF_MultiCombo" right="0" bottom="0" background="white" oneditclick="Div01_edt_output1_oneditclick"/>
              <Button id="btn_execute" taborder="0" onclick="btn_execute_onclick" top="1" style="background:URL('theme://Images/btn_WF_common_N.png') stretch 5,5;" right="1" cssclass="btn_WF_MultiCombo" width="26" bottom="1"/>
            </Layout>
          </Layouts>
        </Div>
        <Grid id="grdMultiCombo" taborder="1" left="0" top="29" binddataset="dsMultiCombo" autofittype="none" readonly="false" oncellclick="pdiv_input_grdMultiCombo_oncellclick" onheadclick="pdiv_input_grdMultiCombo_onheadclick" cssclass="grd_WF_MultiCombo" right="2" bottom="-249">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="48"/>
                <Column size="168"/>
              </Columns>
              <Rows>
                <Row size="32" band="head"/>
                <Row size="30"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkboxcontrol" edittype="checkbox" cssclass="expr:type==&quot;all&quot;?&quot;cellWFMultiCombo&quot;:&quot;&quot;" background="white"/>
                <Cell col="1" text="전체" autosizecol="default" font="normal 12px/normal &quot;NotoSansB&quot;" background="white"/>
              </Band>
              <Band id="body">
                <Cell text="bind:chk" displaytype="checkboxcontrol" edittype="checkbox" cssclass="expr:type==&quot;all&quot;?&quot;cellWFMultiCombo&quot;:&quot;&quot;"/>
                <Cell col="1" text="bind:cdNm"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[include 'ustra::libs/web/app.xjs'
include 'ustra::libs/web/component-dataset.xjs'

// 화면Div에서 넘어온 데이터셋명
var _multiDs;
// 화면Div에서 넘어온 코드명
var _multiCode;
// 화면Div에서 넘어온 데이터명
var _multiData;

var _form;

this.multiCombo_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{	
	// popup div 버그 현상으로 그리드를 form에서 popupdiv로 이동 처리
	var grid = this.grdMultiCombo;
	
	if (!grid) {
		return;
	}
	
	
	this.removeChild('grdMultiCombo');
	
	this.pdiv_input.form.addChild('grdMultiCombo', grid);
 	this.pdiv_input.form.grdMultiCombo.move(0, 0, null, null, 0, 0);
 	this.pdiv_input.form.grdMultiCombo.set_visible(true);
	
	
	// get_value
	this.parent.get_value = function() {
		var selectedRows = $ustra.component.dataset.toObject(this.dsMultiCombo).rows
							.filter(function(row) { return row.chk === '1' } );
		return selectedRows.map(function(row) { return row[this.parent.useCodeColumn]; }.bind(this));
	}.bind(this);
	
	// set_value
	this.parent.set_value = function(values) {
		values = values || [];
		this.setItemChange(values);
	}.bind(this);
	
	
	try {
	
		this.pdiv_input.form.grdMultiCombo.set_enableredraw(false);
	
		this.dsMultiCombo.clear();

		//컴포넌트를 호출한 폼
		_form = $ustra.component.getForm(this, true);
		
		//공통코드 체크박스
		if ($ustra.isNull(this.parent.useFormDataset)) {
		
			this.parent.useCodeColumn = 'dtlCd';
			this.parent.useDataColumn = 'cdNm';
		
			// 화면DIV 유저프로퍼티 공통코드
			var cmCd = this.parent.commonCode;
					
			//공통코드 데이터 불러오기
			this.dsMultiCombo.copyData($ustra.app.commonCode.createDataSet(cmCd));
			
			// 화면DIV 유저프로퍼티 사용여부 필터
			if (!$ustra.isNull(this.parent.useYn)) {
				this.dsMultiCombo.filter("useYn == '" + this.parent.useYn + "'");
			}
			
		} else {
			//화면 데이터셋 체크박스
			_multiCode = this.parent.useCodeColumn;
			_multiData = this.parent.useDataColumn;
			var dtColumn = "bind:" + _multiData;
			this.pdiv_input.form.grdMultiCombo.setCellProperty( "body", 1, "text", dtColumn);
			
			for (var i=0; i<_form.all.length; i++) {
				if (_form.all[i].id == this.parent.useFormDataset) {
					_multiDs = _form.all[i];
				}
			}
			
			if (_multiDs) {
				this.dsMultiCombo.copyData(_multiDs, true);
				var syncTimer = null;
				_multiDs.addEventHandler('onvaluechanged', function(obj, e) {
					if (syncTimer) {
						clearTimeout(syncTimer);
					}
					syncTimer = setTimeout(function() {
						this.dsMultiCombo.copyData(_multiDs, true);
						this.fn_setMultiCombo();
					}.bind(this), 100)
				}, this);
			}
			
		}
		
		//체크박스 컬럼 생성
		this.dsMultiCombo.addColumn('chk', 'string');
		
		
	} finally {
		this.pdiv_input.form.grdMultiCombo.set_enableredraw(true);
	}
	
	
};

this.btn_execute_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//var objApp = nexacro.getApplication();
	//var objMainframe = objApp.mainframe;
	
	// 화면 사이즈변경 시 팝업 좌표틀어져서 부모 Div 사용 
	var nX = this.Div01.form.edt_output1.getOffsetLeft()-8;
	var nY = this.Div01.form.edt_output1.getOffsetBottom();
	//var nX = system.clientToScreenX(this.edt_output1, 0) - system.clientToScreenX(objMainframe, 0);
	//var nY = system.clientToScreenY(this.edt_output1, parseInt(this.edt_output1.height)) - system.clientToScreenY(objMainframe, 0);    
	
	this.pdiv_input.trackPopupByComponent(this.Div01.form.edt_output1, nX+9, nY);
};

this.pdiv_input_grdMultiCombo_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.fn_setMultiCombo();
};

//멀티 콤보 선택 코드
var str_cd = "";
var str_val = "";

this.fn_setMultiCombo = function()
{
	str_cd = "";
	str_val = "";
	
	var totRow = this.dsMultiCombo.getRowCount();
	var chkRow = 0;
	
	for(i = 0; i < totRow; i++) {
		if(this.dsMultiCombo.getColumn(i, "chk") == 1) {
			//공통코드 체크박스
			if ($ustra.isNull(this.parent.useFormDataset)) {
				str_cd += this.dsMultiCombo.getColumn(i, "dtlCd") + ";";
				str_val += this.dsMultiCombo.getColumn(i, "cdNm") + " / ";
			} else {
			//화면 데이터셋 체크박스
				//Div에서 받아온 codeColumn/dataColumn으로 get
				str_cd += this.dsMultiCombo.getColumn(i, _multiCode) + ";";
				str_val += this.dsMultiCombo.getColumn(i, _multiData) + " / ";
			}
			chkRow += 1;
		}
	}
	
	if( totRow == chkRow && $ustra.isNull(this.parent.isAll)) {
		this.Div01.form.edt_output1.set_value("전체");
	} else {
		this.Div01.form.edt_output1.set_value(str_val.substr(0, str_val.length-3));
	}
}

this.pdiv_input_grdMultiCombo_onheadclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	$ustra.component.grid.setGridCheckAll(obj, e);
	this.fn_setMultiCombo();
};

// 선택된 데이터를 화면으로 보내는 함수
this.pdiv_input_oncloseup = function(obj:nexacro.PopupDiv,e:nexacro.EventInfo)
{
	// 화면DIV 유저프로퍼티 콜백함수
	var callBackFn = this.parent.itemChangedFnName;

	if (callBackFn) {
		if ($ustra.isNull(str_cd)) {
			str_cd = null;
		} else {
			if (str_cd.substr(str_cd.length-1, str_cd.length) == ';') str_cd = str_cd.substr(0, str_cd.length-1);
		}
		_form[callBackFn] && _form[callBackFn].call(_form, str_cd);
	}	
};

//멀티콤보 데이터 셋팅
this.setItemChange = function(arr)
{
	//콤보체크 초기화
	this.resetSelect();
	
	for (var i=0; i<this.dsMultiCombo.rowcount; i++) {
		for (var j=0; j<arr.length; j++) {
			//공통코드 체크박스
			if ($ustra.isNull(this.parent.useFormDataset)) {
				if (this.dsMultiCombo.getColumn(i, "dtlCd") == arr[j]) this.dsMultiCombo.setColumn(i, "chk", 1);
			} else {
			//화면 데이터셋 체크박스
				if (this.dsMultiCombo.getColumn(i, _multiCode) == arr[j]) this.dsMultiCombo.setColumn(i, "chk", 1);
			}
		}
	}
	
	this.fn_setMultiCombo();
	this.pdiv_input_oncloseup();
}

this.resetSelect= function()
{
	for (var i=0; i<this.dsMultiCombo.rowcount; i++) {
		this.dsMultiCombo.setColumn(i, "chk", 0);
	}
}

// 에디터 클릭
this.Div01_edt_output1_oneditclick = function(obj:nexacro.Edit,e:nexacro.EditClickEventInfo)
{
	this.btn_execute_onclick();
};
]]></Script>
    <Objects>
      <Dataset id="dsMultiCombo"/>
    </Objects>
  </Form>
</FDL>
